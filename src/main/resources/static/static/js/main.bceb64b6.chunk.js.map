{"version":3,"sources":["components/FooterComponent.js","components/HeaderComponent.js","services/EmployeeService.js","screens/AddEmployee.js","screens/ListEmployees.js","screens/UpdateEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","className","Component","HeaderComponent","class","base_url","axios","get","id","employee","post","put","delete","AddEmployee","props","fnameChange","e","setState","fname","target","value","lnameChange","lname","emailChange","email","add","state","EmployeeService","addEmployees","then","history","push","cancel","for","name","placeholder","autoComplete","required","autoFocus","this","onChange","type","onClick","ListEmployees","addEmployee","update","deleteEmployees","window","location","reload","employees","getEmployees","data","map","UpdateEmployee","updateEmployees","match","params","getEmployeesById","res","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bceb64b6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FooterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <footer>\r\n          <div className=\"container footer p-1\">\r\n            <span>Employees CRUD @2020</span>\r\n          </div>\r\n        </footer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class HeaderComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <header>\r\n          <nav class=\"navbar navbar-light bg-light\">\r\n            <div class=\"container-fluid header p-3\">\r\n              <span class=\"navbar-brand mb-0 h1\">EMPLOYEES CRUD</span>\r\n            </div>\r\n          </nav>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst base_url = \"/api/employees\";\r\n\r\nclass EmployeeService{\r\n  getEmployees(){\r\n    return axios.get(base_url);\r\n  }\r\n  \r\n  getEmployeesById(id){\r\n    return axios.get(base_url + \"/\" + id);\r\n  }\r\n\r\n  addEmployees(employee){\r\n    return axios.post(base_url, employee);\r\n  }\r\n\r\n  updateEmployees(employee, id){\r\n    return axios.put(base_url + \"/\" + id, employee);\r\n  }\r\n\r\n  deleteEmployees(id){\r\n    return axios.delete(base_url + \"/\" + id);\r\n  }\r\n}\r\n\r\nexport default new EmployeeService();","import React, { Component } from \"react\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\n\r\nexport default class AddEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fname : '',\r\n      lname : '',\r\n      email : ''\r\n    };\r\n  }\r\n\r\n  fnameChange = (e) =>{\r\n    this.setState({fname : e.target.value});\r\n  }\r\n\r\n  lnameChange = (e) =>{\r\n    this.setState({lname : e.target.value});\r\n  }\r\n\r\n  emailChange = (e) =>{\r\n    this.setState({email : e.target.value});\r\n  }\r\n\r\n  add = () => {\r\n    let employee = {\r\n      fname : this.state.fname,\r\n      lname : this.state.lname,\r\n      email : this.state.email\r\n    }\r\n    EmployeeService.addEmployees(employee).then(() => this.props.history.push(\"/employees\"));\r\n  }\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/employees\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title text-center\">Add Employee</h3>\r\n          </div>\r\n          <div className=\"container p-3\">\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"fname\">First Name</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"fname\"\r\n                    id=\"fname\"\r\n                    placeholder=\"Your First Name\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    autoFocus\r\n                    value = {this.state.fname}\r\n                    onChange={(e) => this.fnameChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"lname\">Last Name</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"lname\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Your Last Name\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    value = {this.state.lname}\r\n                    onChange={(e) => this.lnameChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"email\">Email</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    value = {this.state.email}\r\n                    onChange={(e) => this.emailChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"button\" class=\"btn btn-success\" onClick={this.add}>\r\n                Add\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-danger\" onClick={this.cancel}>\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\nexport default class ListEmployees extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       employees: []\r\n    }\r\n  }\r\n  \r\ncomponentDidMount(){\r\n  EmployeeService.getEmployees().then(e =>{\r\n    this.setState({employees : e.data})\r\n  })\r\n}\r\n\r\naddEmployee = () =>{\r\n  this.props.history.push(\"/add-employee\")\r\n}\r\n\r\nupdate = (id) =>{\r\n  this.props.history.push(`/update-employee/${id}`)\r\n}\r\n\r\ndelete = (id) =>{\r\n  EmployeeService.deleteEmployees(id).then(() =>  window.location.reload())\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"container\">\r\n        <h2 className=\"text-center\">Employees List</h2>\r\n        <button type=\"button\" class=\"btn btn-primary mb-2\" onClick={this.addEmployee}>Add Employee</button>\r\n        <table className=\"table table-bordered table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {this.state.employees.map(e => {\r\n              return(\r\n              <tr key = {e.id}>\r\n              <td>{e.fname}</td>\r\n              <td>{e.lname}</td>\r\n              <td>{e.email}</td>\r\n              <td>\r\n              <button type=\"button\" class=\"btn btn-warning\" onClick={() => this.update(e.id)}>Update</button>\r\n              <button type=\"button\" class=\"btn btn-danger\" onClick={() => this.delete(e.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n            );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\n\r\nexport default class UpdateEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id : this.props.match.params.id,\r\n      fname : '',\r\n      lname : '',\r\n      email : ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    EmployeeService.getEmployeesById(this.state.id).then(e => {\r\n      let res = e.data;\r\n      this.setState({\r\n        fname : res.fname,\r\n        lname : res.lname,\r\n        email : res.email\r\n      })\r\n    })\r\n  }\r\n\r\n  fnameChange = (e) =>{\r\n    this.setState({fname : e.target.value});\r\n  }\r\n\r\n  lnameChange = (e) =>{\r\n    this.setState({lname : e.target.value});\r\n  }\r\n\r\n  emailChange = (e) =>{\r\n    this.setState({email : e.target.value});\r\n  }\r\n\r\n  update = () => {\r\n    let employee = {\r\n      fname : this.state.fname,\r\n      lname : this.state.lname,\r\n      email : this.state.email\r\n    };\r\n    let id = this.state.id;\r\n    EmployeeService.updateEmployees(employee, id).then(() => this.props.history.push(\"/employees\"));\r\n  }\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/employees\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3 className=\"card-title text-center\">Update Employee</h3>\r\n          </div>\r\n          <div className=\"container p-3\">\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"fname\">First Name</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"fname\"\r\n                    id=\"fname\"\r\n                    placeholder=\"Your First Name\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    autoFocus\r\n                    value = {this.state.fname}\r\n                    onChange={(e) => this.fnameChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"lname\">Last Name</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"lname\"\r\n                    id=\"lname\"\r\n                    placeholder=\"Your Last Name\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    value = {this.state.lname}\r\n                    onChange={(e) => this.lnameChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <label for=\"email\">Email</label>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                  <input\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Your Email\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    value = {this.state.email}\r\n                    onChange={(e) => this.emailChange(e)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"button\" class=\"btn btn-success\" onClick={this.update}>\r\n                Update\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-danger\" onClick={this.cancel}>\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport FooterComponent from \"./components/FooterComponent\";\nimport HeaderComponent from \"./components/HeaderComponent\";\nimport AddEmployee from \"./screens/AddEmployee\";\nimport ListEmployees from \"./screens/ListEmployees\";\nimport UpdateEmployee from \"./screens/UpdateEmployee\";\nimport 'react-app-polyfill/stable';\n\nfunction App() {\n  return (\n    <Router>\n      <HeaderComponent />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={ListEmployees}></Route>\n          <Route path=\"/employees\" component={ListEmployees}></Route>\n          <Route path=\"/add-employee\" component={AddEmployee}></Route>\n          <Route path=\"/update-employee/:id\" component={UpdateEmployee}></Route>\n        </Switch>\n      </div>\n      <FooterComponent />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}